services:
  web:
    build:
      context: .
    restart: unless-stopped
    volumes:
      - static_data:/vol/web
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydatabase"]
      interval: 5s
      timeout: 3s
      retries: 3

  proxy:
    build: ./proxy
    restart: unless-stopped
    depends_on:
      - web
    ports:
      - 80:8000
    volumes:
      - static_data:/vol/static

volumes:
  db_data:
  static_data:
